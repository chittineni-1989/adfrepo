{
	"name": "SCD_Type2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Department_Table_Dataset",
						"type": "DatasetReference"
					},
					"name": "RetrievingtheSourceTable"
				},
				{
					"dataset": {
						"referenceName": "departmentadfdb",
						"type": "DatasetReference"
					},
					"name": "TargetTableExtraction"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "HashValuGeneration"
				},
				{
					"name": "Hashfromtarget"
				},
				{
					"name": "exists1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          DepartmentID as short,",
				"          Name as string,",
				"          GroupName as string,",
				"          ModifiedDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> RetrievingtheSourceTable",
				"source(output(",
				"          DepartmentID as integer,",
				"          Name as string,",
				"          GroupName as string,",
				"          ModifiedDate as timestamp,",
				"          Status as string,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> TargetTableExtraction",
				"RetrievingtheSourceTable derive(Hashvalue = md5(DepartmentID,Name,GroupName,ModifiedDate)) ~> HashValuGeneration",
				"TargetTableExtraction derive(targethash = md5(DepartmentID,Name,GroupName,ModifiedDate)) ~> Hashfromtarget",
				"HashValuGeneration, Hashfromtarget exists(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     negate:true,",
				"     broadcast: 'auto')~> exists1"
			]
		}
	}
}